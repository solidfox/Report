%% Created using Papers on Tue, 18 Dec 2018.
%% http://papersapp.com/papers/

@booklet{OSullivan:2008tf,
title = {{Real world haskell: Code you can believe in}},
author = {O'Sullivan, B and Goerzen, J and Stewart, D B},
year = {2008},
read = {Yes},
rating = {0},
date-added = {2018-03-05T16:15:29GMT},
date-modified = {2018-10-29T13:24:00GMT},
abstract = {This easy-to-use, fast-moving tutorial introduces you to functional programming with Haskell . You'll learn how to use Haskell in a variety of practical ways, from short scripts to large and demanding applications. Real World Haskell takes you through the basics of functional
},
url = {https://books.google.com/books?hl=en&lr=&id=nh0okI1a1sQC&oi=fnd&pg=PR7&dq=Real+World+Haskell&ots=s_TEr8eYbU&sig=4iyVZW7mf6ypMlbwn4dnvDRgt88},
uri = {\url{papers3://publication/uuid/B464C874-5D7B-46C1-B934-0010AFE71345}}
}

@inproceedings{Dawson:2017fu,
author = {Dawson, Justin and Grebe, Mark and Gill, Andy},
title = {{Composable network stacks and remote monads}},
booktitle = {the 10th ACM SIGPLAN International Symposium},
year = {2017},
pages = {86--97},
publisher = {ACM Press},
address = {New York, New York, USA},
doi = {10.1145/3122955.3122968},
isbn = {9781450351829},
read = {Yes},
rating = {0},
date-added = {2018-03-12T12:45:27GMT},
date-modified = {2018-12-17T15:26:57GMT},
url = {http://dl.acm.org/citation.cfm?doid=3122955.3122968},
local-url = {file://localhost/Users/spike/Dropbox/Apps/Library.papers3/Files/EE/EE5C1A9A-9E1E-4F14-BAC1-0E8CEE87A8F4.pdf},
file = {{EE5C1A9A-9E1E-4F14-BAC1-0E8CEE87A8F4.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/EE/EE5C1A9A-9E1E-4F14-BAC1-0E8CEE87A8F4.pdf:application/pdf}},
uri = {\url{papers3://publication/doi/10.1145/3122955.3122968}}
}

@webpage{Byron:VEbMdN9o,
author = {Byron, Lee},
title = {{\textbf{How is Facebook's React JavaScript library? How does it compare with other popular JavaScript libraries?}}},
url = {https://www.quora.com/React-JS-Library/How-is-Facebooks-React-JavaScript-library-How-does-it-compare-with-other-popular-JavaScript-libraries/answer/Lee-Byron?srid=3DcX},
read = {Yes},
rating = {0},
date-added = {2018-03-12T08:20:47GMT},
date-modified = {2018-10-29T13:24:01GMT},
uri = {\url{papers3://publication/uuid/5446CC74-DF68-48E1-A4D9-E088238012AE}}
}

@booklet{Backus:2007gb,
title = {{Can programming be liberated from the von Neumann style?: a functional style and its algebra of programs}},
author = {Backus, John},
howpublished = {Association of Computing Machinery},
address = {New York},
month = jan,
year = {2007},
publisher = {Association of Computing Machinery},
doi = {10.1145/1283920.1283933},
isbn = {978-1-4503-1049-9},
read = {Yes},
rating = {0},
date-added = {2018-12-01T08:16:58GMT},
date-modified = {2018-12-18T13:42:27GMT},
url = {http://dl.acm.org/citation.cfm?id=1283933},
local-url = {file://localhost/Users/spike/Dropbox/Apps/Library.papers3/Files/F4/F465E73D-0649-4E18-96E5-2F68DA2F65D0.pdf},
file = {{F465E73D-0649-4E18-96E5-2F68DA2F65D0.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/F4/F465E73D-0649-4E18-96E5-2F68DA2F65D0.pdf:application/pdf}},
uri = {\url{papers3://publication/doi/10.1145/1283920.1283933}}
}

@article{journal:vd,
author = {journal, J Hughes The computer and {1989}},
title = {{Why functional programming matters}},
journal = {academic.oup.com
},
read = {Yes},
rating = {0},
date-added = {2018-03-05T16:13:22GMT},
date-modified = {2018-12-17T15:32:11GMT},
abstract = {Abstract As software becomes more and more complex, it is more and more important to structure it well. Well-structured software is easy to write, easy to debug, and provides a collection of modules that can be re-used to reduce future programming costs. Conventional
},
url = {https://academic.oup.com/comjnl/article-abstract/32/2/98/543535},
local-url = {file://localhost/Users/spike/Dropbox/Apps/Library.papers3/Files/B9/B9092B13-6122-4E68-9DC0-61355EB47892.pdf},
file = {{B9092B13-6122-4E68-9DC0-61355EB47892.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/B9/B9092B13-6122-4E68-9DC0-61355EB47892.pdf:application/pdf}},
uri = {\url{papers3://publication/uuid/F17873A0-FADA-4EEE-864D-9DF18224AFC0}}
}

@article{Anonymous:e5rpq7Ob,
author = {thesis, E Czaplicki Senior and thesis, E Czaplicki Senior and {Harvard University} and {Harvard University} and {2012} and {2012}},
title = {{Elm: Concurrent frp for functional guis}},
journal = {seas.harvard.edu},
read = {Yes},
rating = {0},
date-added = {2018-03-12T12:47:53GMT},
date-modified = {2018-12-08T15:14:43GMT},
abstract = {Graphical user interfaces ( GUIs ) mediate almost all of our interactions with computers, whether it is through web pages, phone apps, or desktop applications. Functional Reactive Programming ( FRP ) is a promising approach to GUI design. This thesis presents Elm, a~{\ldots}},
url = {https://www.seas.harvard.edu/sites/default/files/files/archived/Czaplicki.pdf},
local-url = {file://localhost/Users/spike/Dropbox/Apps/Library.papers3/Files/68/68F7F262-E6FA-4BEC-8393-A490FDEA0AE7.pdf},
file = {{68F7F262-E6FA-4BEC-8393-A490FDEA0AE7.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/68/68F7F262-E6FA-4BEC-8393-A490FDEA0AE7.pdf:application/pdf}},
uri = {\url{papers3://publication/uuid/7B9AE9AB-B39B-4308-8F28-C33B34D2428B}}
}

@article{ahuger:XNkCyNuv,
title = {{a6-huger}},
year = {2013},
pages = {1--5},
month = jun,
read = {Yes},
rating = {0},
date-added = {2018-12-06T15:44:20GMT},
date-modified = {2018-12-18T13:42:27GMT},
local-url = {file://localhost/Users/spike/Dropbox/Apps/Library.papers3/Files/66/660C6240-BE03-4A52-9183-53EC02D37726.pdf},
file = {{660C6240-BE03-4A52-9183-53EC02D37726.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/66/660C6240-BE03-4A52-9183-53EC02D37726.pdf:application/pdf}},
uri = {\url{papers3://publication/uuid/5CD902C8-DBAF-43D3-BFBC-493D48D77953}}
}

@book{Anonymous:y81yxOHF,
title = {{ACM SIGPLAN Notices}},
publisher = {ACM},
issn = {0362-1340},
rating = {0},
date-added = {2018-03-12T12:37:21GMT},
date-modified = {2018-12-18T13:42:27GMT},
uri = {\url{papers3://publication/uuid/CBCD72C4-E1C5-4209-8AC0-55425AE1750F}}
}

@book{Gill:2016hz,
author = {Gill, Andy and Sculthorpe, Neil and Dawson, Justin and Eskilson, Aleksander and Farmer, Andrew and Grebe, Mark and Rosenbluth, Jeffrey and Scott, Ryan and Stanton, James and Gill, Andy and Sculthorpe, Neil and Dawson, Justin and Eskilson, Aleksander and Farmer, Andrew and Grebe, Mark and Rosenbluth, Jeffrey and Scott, Ryan and Stanton, James},
title = {{The remote monad design pattern}},
publisher = {ACM},
year = {2016},
volume = {50},
month = jan,
doi = {10.1145/2887747.2804311},
isbn = {978-1-4503-3808-0},
language = {English},
read = {Yes},
rating = {0},
date-added = {2018-03-06T21:35:11GMT},
date-modified = {2018-12-17T15:28:17GMT},
abstract = {{\ldots} Copyright is held by the owner/author(s). Publication rights licensed to ACM. Haskell'15, September 3-4, 2015, Vancouver, BC, Canada ACM. 978-1-4503-3808- 0/15/09...$15.00 http://dx.doi.org/ 10.1145 / 2804302.2804311 59 Page 2~{\ldots}
},
url = {http://dl.acm.org/citation.cfm?doid=2887747.2804311},
local-url = {file://localhost/Users/spike/Dropbox/Apps/Library.papers3/Files/EB/EB41BB54-FC7A-40E4-9FEF-C7F1F9F892A0.pdf},
file = {{EB41BB54-FC7A-40E4-9FEF-C7F1F9F892A0.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/EB/EB41BB54-FC7A-40E4-9FEF-C7F1F9F892A0.pdf:application/pdf;EB41BB54-FC7A-40E4-9FEF-C7F1F9F892A0.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/EB/EB41BB54-FC7A-40E4-9FEF-C7F1F9F892A0.pdf:application/pdf}},
uri = {\url{papers3://publication/doi/10.1145/2887747.2804311}}
}

@article{:2010df,
title = {{Customizing a functional programming language for web development}},
journal = {Computer Language},
year = {2010},
volume = {36},
number = {4},
pages = {345--351},
month = jun,
publisher = {Elsevier},
doi = {10.1016/j.cl.2010.04.001},
issn = {1477-8424},
language = {English},
read = {Yes},
rating = {0},
date-added = {2018-12-06T16:03:44GMT},
date-modified = {2018-12-18T13:42:27GMT},
url = {http://dx.doi.org/10.1016/j.cl.2010.04.001},
local-url = {file://localhost/Users/spike/Dropbox/Apps/Library.papers3/Files/71/71111B8C-C31D-4B9A-9FEA-CEA75E7138AC.pdf},
file = {{71111B8C-C31D-4B9A-9FEA-CEA75E7138AC.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/71/71111B8C-C31D-4B9A-9FEA-CEA75E7138AC.pdf:application/pdf}},
uri = {\url{papers3://publication/doi/10.1016/j.cl.2010.04.001}}
}

@article{Czaplicki:2013eda,
author = {Czaplicki, Evan and Chong, Stephen},
title = {{Asynchronous functional reactive programming for GUIs}},
journal = {ACM SIGPLAN Notices},
year = {2013},
volume = {48},
number = {6},
pages = {411},
month = jun,
doi = {10.1145/2499370.2462161},
language = {English},
read = {Yes},
rating = {0},
date-added = {2018-03-12T12:52:32GMT},
date-modified = {2018-12-17T15:29:34GMT},
url = {http://dl.acm.org/citation.cfm?doid=2499370.2462161},
local-url = {file://localhost/Users/spike/Dropbox/Apps/Library.papers3/Files/F7/F72688E1-2877-4169-97D5-C59F3FAB47AA.pdf},
file = {{F72688E1-2877-4169-97D5-C59F3FAB47AA.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/F7/F72688E1-2877-4169-97D5-C59F3FAB47AA.pdf:application/pdf}},
uri = {\url{papers3://publication/doi/10.1145/2499370.2462161}}
}

@article{Moritz:2017uf,
author = {Moritz, Philipp and Nishihara, Robert and Wang, Stephanie and Tumanov, Alexey and Liaw, Richard and Liang, Eric and Paul, William and Jordan, Michael I and Stoica, Ion},
title = {{Ray - A Distributed Framework for Emerging AI Applications.}},
journal = {CoRR},
year = {2017},
volume = {cs.DC},
annote = {Finally, I stumbled across a paper which appears to be closely related, but for completely different reasons:
https://arxiv.org/abs/1712.05889

It's about a system, "Ray", which is designed to be used for simulations for applications like reinforcement learning. The amazing thing is that they propose an architecture which is essentially stateless except for a "global control state" component! Thus, it seems to me that they are moving very much into the direction you are heading, Daniel, but in a completely different setting. (The reason why they want to have a stateless architecture is fault tolerance: re-execution is sufficient to re-construct results.)

We're onto something here!
Best,
Philipp},
read = {Yes},
rating = {0},
date-added = {2018-03-19T13:49:21GMT},
date-modified = {2018-12-17T15:27:55GMT},
abstract = {The next generation of AI applications will continuously interact with the environment and learn from these interactions. These applications impose new and demanding systems requirements, both in terms of performance and flexibility. In this paper, we consider these requirements and present Ray---a distributed system to address them. Ray implements a dynamic task graph computation model that supports both the task-parallel and the actor programming models. To meet the performance requirements of AI applications, we propose an architecture that logically centralizes the system's control state using a sharded storage system and a novel bottom-up distributed scheduler. In our experiments, we demonstrate sub-millisecond remote task latencies and linear throughput scaling beyond 1.8 million tasks per second. We empirically validate that Ray speeds up challenging benchmarks and serves as both a natural and performant fit for an emerging class of reinforcement learning applications and algorithms.},
url = {http://arxiv.org/abs/1712.05889v1},
local-url = {file://localhost/Users/spike/Dropbox/Apps/Library.papers3/Files/EF/EF1A07CA-76D2-4DBD-A23B-3ED45ABA8FC6.pdf},
file = {{EF1A07CA-76D2-4DBD-A23B-3ED45ABA8FC6.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/EF/EF1A07CA-76D2-4DBD-A23B-3ED45ABA8FC6.pdf:application/pdf;EF1A07CA-76D2-4DBD-A23B-3ED45ABA8FC6.pdf:/Users/spike/Dropbox/Apps/Library.papers3/Files/EF/EF1A07CA-76D2-4DBD-A23B-3ED45ABA8FC6.pdf:application/pdf}},
uri = {\url{papers3://publication/uuid/DB731D5E-3E43-4E8B-8C5D-B3D2A11F2378}}
}

